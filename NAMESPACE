S3method(antipode,Coordinate)
S3method(antipode,default)
S3method(bearing,Coordinate)
S3method(bearing,default)
S3method(destination,Coordinate)
S3method(destination,default)
S3method(getLatitude,Coordinate)
S3method(getLatitude,default)
S3method(getLongitude,Coordinate)
S3method(getLongitude,default)
S3method(haversineDistance,Coordinate)
S3method(haversineDistance,default)
S3method(midpoint,Coordinate)
S3method(midpoint,default)
S3method(moveLatitude,Coordinate)
S3method(moveLatitude,default)
S3method(moveLongitude,Coordinate)
S3method(moveLongitude,default)
S3method(sphericalDistance,Coordinate)
S3method(sphericalDistance,default)
S3method(vincentyDistance,Coordinate)
S3method(vincentyDistance,default)
export(Coordinate)
export(antipode)
export(bearing)
export(deg2rad)
export(destination)
export(dms2deg)
export(dms2rad)
export(getExternalIP)
export(getExternalIP.appspot)
export(getExternalIP.icanhazip)
export(getExternalIP.ifconfig)
export(getExternalIP.ipecho)
export(getExternalIP.whatismyipaddress)
export(getIpCoordinates)
export(getIpCoordinates.freegeoip)
export(getIpCoordinates.hostip)
export(getLatitude)
export(getLongitude)
export(haversineDistance)
export(is.connected)
export(is.latitude)
export(is.linux)
export(is.longitude)
export(is.mac)
export(is.windows)
export(midpoint)
export(moveLatitude)
export(moveLongitude)
export(rad2deg)
export(reverseGeocoding)
export(reverseGeocoding.google)
export(sphericalDistance)
export(validate.Latitude)
export(validate.Longitude)
export(vincentyDistance)
import(RCurl)
import(rjson)
